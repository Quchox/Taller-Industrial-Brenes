ALTER PROCEDURE CrearHorario
    @UsuarioID BIGINT,
    @DiaSemana VARCHAR(10),
    @HoraInicio TIME,
    @HoraFin TIME,
    @Observaciones VARCHAR(255)
AS
BEGIN
    SET NOCOUNT ON;

    -- 1. Validar que sea empleado (RolID = 3)
    IF NOT EXISTS (
        SELECT 1 FROM Usuarios WHERE UsuarioID = @UsuarioID AND RolID = 3
    )
    BEGIN
        RAISERROR('El usuario no es un empleado.', 16, 1)
        RETURN
    END

    -- 2. Validar traslape de horarios
    IF EXISTS (
        SELECT 1
        FROM Horarios
        WHERE UsuarioID = @UsuarioID
          AND DiaSemana = @DiaSemana
          AND (
                (@HoraInicio BETWEEN HoraInicio AND HoraFin)
             OR (@HoraFin BETWEEN HoraInicio AND HoraFin)
             OR (HoraInicio BETWEEN @HoraInicio AND @HoraFin)
              )
    )
    BEGIN
        RAISERROR('Ya existe un horario para este usuario que se traslapa en ese día.', 16, 1)
        RETURN
    END

    -- 3. Insertar si pasa validaciones
    INSERT INTO Horarios (UsuarioID, DiaSemana, HoraInicio, HoraFin, Observaciones)
    VALUES (@UsuarioID, @DiaSemana, @HoraInicio, @HoraFin, @Observaciones)
END
-- ==============================
CREATE PROCEDURE ObtenerHorariosPorUsuario
    @UsuarioID BIGINT
AS
BEGIN
    SELECT HorarioID, DiaSemana, HoraInicio, HoraFin, Observaciones
    FROM Horarios
    WHERE UsuarioID = @UsuarioID
END
-- ==============================
ALTER PROCEDURE ActualizarHorario
    @HorarioID INT,
    @DiaSemana VARCHAR(10),
    @HoraInicio TIME,
    @HoraFin TIME,
    @Observaciones VARCHAR(255)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @UsuarioID BIGINT

    -- Obtener el UsuarioID del horario que se está actualizando
    SELECT @UsuarioID = UsuarioID FROM Horarios WHERE HorarioID = @HorarioID

    IF @UsuarioID IS NULL
    BEGIN
        RAISERROR('El horario no existe.', 16, 1)
        RETURN
    END

    -- Validar 
    IF EXISTS (
        SELECT 1
        FROM Horarios
        WHERE UsuarioID = @UsuarioID
          AND DiaSemana = @DiaSemana
          AND HorarioID <> @HorarioID
          AND (
                (@HoraInicio BETWEEN HoraInicio AND HoraFin)
             OR (@HoraFin BETWEEN HoraInicio AND HoraFin)
             OR (HoraInicio BETWEEN @HoraInicio AND @HoraFin)
              )
    )
    BEGIN
        RAISERROR('Ya existe otro horario que se traslapa en ese día.', 16, 1)
        RETURN
    END

    -- Actualizar si no hay traslape
    UPDATE Horarios
    SET DiaSemana = @DiaSemana,
        HoraInicio = @HoraInicio,
        HoraFin = @HoraFin,
        Observaciones = @Observaciones
    WHERE HorarioID = @HorarioID
END

-- ==============================
CREATE PROCEDURE EliminarHorario
    @HorarioID INT
AS
BEGIN
    DELETE FROM Horarios
    WHERE HorarioID = @HorarioID
END
